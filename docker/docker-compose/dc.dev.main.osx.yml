version: "3"

services:
  jobs:
    image: jobs
    build: 
      context: .
      dockerfile: ../dockerfiles/Dockerfile.jobs
    container_name: jobs
    networks:
      - my_net
    expose:
      - 80
      - 443
    restart: always
    volumes:
      - ../../volumes/logs/crons:/crons
      - ../configs/jobs/scripts/dev:/scripts
      - ../configs/jobs/start.sh:/start.sh
      - ../configs/jobs/crontab:/etc/crontab 
  db:
    image: db
    build: 
      context: .
      dockerfile: ../dockerfiles/Dockerfile.mysql
    container_name: db
    depends_on:
      - jobs
    networks:
      - my_net
    expose:
      - 3306
    ports: 
      - "3306:3306"
    restart: always
    volumes:
      - ../../volumes/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=87654321
      - MYSQL_DATABASE=my_db
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=12345678
  flyway:
    image: flyway/flyway
    container_name: flyway
    depends_on:
      - db
    networks:
      - insignia
    volumes:
      - ../../sql:/flyway/sql 
      - ../configs/flyway:/flyway/conf 
    command: -url=jdbc:mysql://db:3306/my_db -user=dev -password=12345678 migrate
  proxy:
    image: nginx:alpine
    container_name: proxy
    networks:
      - my_net
    expose: 
      - 80
      - 443
    ports:
      - "8080:8080"
      - "443:443"
    volumes:
      - ../configs/nginx-proxy/prod:/etc/nginx/conf.d
      - ../../src:/src
      - ../configs/certbot/prod/conf:/etc/letsencrypt
      - ../configs/certbot/prod/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    networks:
      - insignia
    volumes:
      - ../configs/certbot/prod/conf:/etc/letsencrypt
      - ../configs/certbot/prod/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  varnish:
    image: varnish
    container_name: cache
    networks:
      - my_net
    ports:
      - "80:80"
      - "6082:6082"
    depends_on:
      - proxy
    volumes:
      - ../configs/varnish/default.vcl:/etc/varnish/default.vcl
  php:
    image: custom_php:latest
    build: 
      context: .
      dockerfile: ../dockerfiles/Dockerfile.php-fpm
    container_name: php
    networks:
      - my_net
    volumes:
      - ../../src:/src
      - ../configs/php/php.ini:/usr/local/etc/php/php.ini
      - ../configs/php/browscap.ini:/etc/defaults/php/browscap.ini
      - ../configs/php/php-fpm.conf:/etc/defaults/php/fpm.conf
      - ../configs/php/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-fpm.conf
      - ../configs/php/greet:/etc/greet
      - ../../volumes/logs:/var/log
      - ../../volumes/files:/src/school/files
    restart: always
    environment:
      - APP_NAME=practice
networks:
  my_net:
    external: true